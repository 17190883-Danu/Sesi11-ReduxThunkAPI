{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  isLoginPending: false,\n  isLoginSuccess: false,\n  errorMessage: '',\n  user: {}\n};\n\nconst callLoginApi = _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (email == 'danu28@gmail.com' && password == '12345678') {\n        resolve({\n          email\n        });\n      } else {\n        reject('Your Credential is Invalid');\n      }\n    }, 2000);\n  });\n};\n\nexport const authLoginApi = createAsyncThunk('auth/login', async _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n\n  try {\n    const response = await callLoginApi({\n      email,\n      password\n    });\n    return response;\n  } catch (e) {\n    //\n    console.log('error', e);\n    throw e;\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n\n  extraReducers(builder) {\n    builder.addCase(authLoginApi.pending, state => {\n      state.isLoginPending = true;\n      state.errorMessage = '';\n      state.isLoginSuccess = false;\n    }).addCase(authLoginApi.fulfilled, (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.isLoginPending = false;\n      state.isLoginSuccess = true;\n      state.user = payload;\n    }).addCase(authLoginApi.rejected, (state, action) => {\n      state.isLoginPending = false;\n      state.errorMessage = action.error.message;\n    });\n  }\n\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","isLoginPending","isLoginSuccess","errorMessage","user","callLoginApi","email","password","Promise","resolve","reject","setTimeout","authLoginApi","response","e","console","log","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","action","error","message","reducer"],"sources":["C:/Users/Acer/Documents/Hactiv/Sesi11/Dosen/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios';\n\nconst initialState = {\n  isLoginPending: false,\n  isLoginSuccess: false,\n  errorMessage: '',\n  user: {}\n}\n\nconst callLoginApi = ({email, password}) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if(email == 'danu28@gmail.com' && password == '12345678') {\n        resolve({\n          email\n        })\n      } else {\n        reject('Your Credential is Invalid')\n      }\n    }, 2000)\n  })\n}\n\nexport const authLoginApi = createAsyncThunk(\n  'auth/login',\n  async ({email, password}) => {\n    try {\n      const response = await callLoginApi({email, password})\n      return response;\n    } catch (e) {\n      //\n      console.log('error', e);\n      throw(e)\n    }\n})\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(authLoginApi.pending, (state) => {\n        state.isLoginPending = true\n        state.errorMessage = '';\n        state.isLoginSuccess = false\n      })\n      .addCase(authLoginApi.fulfilled, (state, { payload }) => {\n        state.isLoginPending = false\n        state.isLoginSuccess = true\n        state.user = payload\n      })\n      .addCase(authLoginApi.rejected, (state, action) => {\n        state.isLoginPending = false\n        state.errorMessage = action.error.message;\n      })\n  }\n});\n\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;EACnBC,cAAc,EAAE,KADG;EAEnBC,cAAc,EAAE,KAFG;EAGnBC,YAAY,EAAE,EAHK;EAInBC,IAAI,EAAE;AAJa,CAArB;;AAOA,MAAMC,YAAY,GAAG,QAAuB;EAAA,IAAtB;IAACC,KAAD;IAAQC;EAAR,CAAsB;EAC1C,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCC,UAAU,CAAC,MAAM;MACf,IAAGL,KAAK,IAAI,kBAAT,IAA+BC,QAAQ,IAAI,UAA9C,EAA0D;QACxDE,OAAO,CAAC;UACNH;QADM,CAAD,CAAP;MAGD,CAJD,MAIO;QACLI,MAAM,CAAC,4BAAD,CAAN;MACD;IACF,CARS,EAQP,IARO,CAAV;EASD,CAVM,CAAP;AAWD,CAZD;;AAcA,OAAO,MAAME,YAAY,GAAGd,gBAAgB,CAC1C,YAD0C,EAE1C,eAA6B;EAAA,IAAtB;IAACQ,KAAD;IAAQC;EAAR,CAAsB;;EAC3B,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMR,YAAY,CAAC;MAACC,KAAD;MAAQC;IAAR,CAAD,CAAnC;IACA,OAAOM,QAAP;EACD,CAHD,CAGE,OAAOC,CAAP,EAAU;IACV;IACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,CAArB;IACA,MAAMA,CAAN;EACD;AACJ,CAX2C,CAArC;AAaP,MAAMG,SAAS,GAAGpB,WAAW,CAAC;EAC5BqB,IAAI,EAAE,MADsB;EAE5BlB,YAF4B;EAG5BmB,QAAQ,EAAE,EAHkB;;EAI5BC,aAAa,CAACC,OAAD,EAAU;IACrBA,OAAO,CACJC,OADH,CACWV,YAAY,CAACW,OADxB,EACkCC,KAAD,IAAW;MACxCA,KAAK,CAACvB,cAAN,GAAuB,IAAvB;MACAuB,KAAK,CAACrB,YAAN,GAAqB,EAArB;MACAqB,KAAK,CAACtB,cAAN,GAAuB,KAAvB;IACD,CALH,EAMGoB,OANH,CAMWV,YAAY,CAACa,SANxB,EAMmC,CAACD,KAAD,YAAwB;MAAA,IAAhB;QAAEE;MAAF,CAAgB;MACvDF,KAAK,CAACvB,cAAN,GAAuB,KAAvB;MACAuB,KAAK,CAACtB,cAAN,GAAuB,IAAvB;MACAsB,KAAK,CAACpB,IAAN,GAAasB,OAAb;IACD,CAVH,EAWGJ,OAXH,CAWWV,YAAY,CAACe,QAXxB,EAWkC,CAACH,KAAD,EAAQI,MAAR,KAAmB;MACjDJ,KAAK,CAACvB,cAAN,GAAuB,KAAvB;MACAuB,KAAK,CAACrB,YAAN,GAAqByB,MAAM,CAACC,KAAP,CAAaC,OAAlC;IACD,CAdH;EAeD;;AApB2B,CAAD,CAA7B;AAuBA,eAAeb,SAAS,CAACc,OAAzB"},"metadata":{},"sourceType":"module"}